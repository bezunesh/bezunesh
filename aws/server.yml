Description: >
    This template deploys security groups, an autoscaling group and launch configuration.
Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String
    VpcCIDR:
      Description: CIDR IP range for the VPC
      Type: String
      Default: 10.0.0.0/16

Resources:
  S3ReadOnlyRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess"
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "ec2.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: "/"

  S3ReadOnlyProfile: 
    Type: AWS::IAM::InstanceProfile
    Properties: 
      Path: "/"
      Roles: 
        - !Ref S3ReadOnlyRole 

  WebServerSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to our hosts and SSH from local only
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 8080
        ToPort: 8080
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 0
        ToPort: 65535
        CidrIp: 0.0.0.0/0
  
  WebAppLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      KeyName: "bezu-aws"
      UserData: !Base64 |
          #!/bin/bash
          apt update -y
          apt -y upgrade
          apt install -y awscli
          apt install -y build-essential python3-pip python3-venv
          apt-get install make -y
          apt-get install nginx -y
          # copy ssh-key
          aws s3 cp s3://bezu-portfolio-app/key/id_rsa /home/ubuntu/.ssh
          ssh-keyscan -t rsa github.com >> /home/ubuntu/.ssh/known_hosts
          chown ubuntu:ubuntu /home/ubuntu/.ssh/known_hosts
          # clone repo
          sudo -u ubuntu sh -c " cd /home/ubuntu; mkdir project; \
            cd project; \
            git clone git@github.com:bezunesh/bezunesh.git; \
            cd bezunesh; \
            make all "
          # copy gunicorn service file
          aws s3 cp s3://bezu-portfolio-app/conf/gunicorn.service /etc/systemd/system/gunicorn.service
          # start gunicorn service and enable it to start at boot
          systemctl start gunicorn
          systemctl enable gunicorn
          # copy nginx site configuration
          aws s3 cp s3://bezu-portfolio-app/conf/nginx /etc/nginx/sites-available/portfolio
          # enable site
          cd /etc/nginx/sites-enabled
          ln -s /etc/nginx/sites-available/portfolio
          # restart nginx
          systemctl restart nginx
  
      ImageId: ami-083654bd07b5da81d
      IamInstanceProfile: !Ref S3ReadOnlyProfile
      SecurityGroups:
        - Ref: WebServerSecGroup
      InstanceType: t2.micro
      BlockDeviceMappings:
        - DeviceName: "/dev/sda1"
          Ebs:
            VolumeSize: '8'
  
  WebAppAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
      - Fn::ImportValue: 
          !Sub "${EnvironmentName}-PUB-SN"
      LaunchConfigurationName:
        Ref: WebAppLaunchConfig
      MinSize: '1'
      MaxSize: '1'
